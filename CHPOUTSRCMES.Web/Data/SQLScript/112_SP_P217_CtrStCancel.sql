-- =============================================
-- Author:		Polo Lin
-- Create date: 2020/08/21
-- Description:	SOA CONTAINER_ST 資料取消進櫃
-- =============================================
CREATE PROCEDURE [dbo].[SP_P217_CtrStCancel]
	@processCode NVARCHAR(20),
	@serverCode NVARCHAR(20),
	@batchId NVARCHAR(20),
	@code INT OUTPUT,
	@message VARCHAR(500) OUTPUT,
	@user VARCHAR(128)
AS
BEGIN

	DECLARE @controlStage TABLE (
		PROCESS_CODE NVARCHAR(20),
		SERVER_CODE NVARCHAR(20),
		BATCH_ID NVARCHAR(20),
		STATUS_CODE NVARCHAR(1),
		ERROR_MSG NVARCHAR(2000),
		SOA_PULLING_FLAG NVARCHAR(30),
		SOA_PROCESS_CODE NVARCHAR(30)
	)

	DECLARE @detailTable TABLE (
		PROCESS_CODE NVARCHAR(20),
		SERVER_CODE NVARCHAR(20),
		BATCH_ID NVARCHAR(20),
		BATCH_LINE_ID BIGINT,
		CTR_HEADER_ID BIGINT,
		CTR_DETAIL_ID BIGINT,
		STATUS_CODE NVARCHAR(1),
		ERROR_MSG NVARCHAR(2000)
	)

	DECLARE @table TABLE (
		CTR_ORG_ID BIGINT
	)

	DECLARE @success INT = 0
	
	SET @message = 'PROCESS_CODE:' + @processCode + ' SERVER_CODE:' + @serverCode + ' BATCH_ID:' + @batchId

	BEGIN TRY
		
		--取出待處理項目
		SET @success = @success + 1
		INSERT INTO @controlStage (PROCESS_CODE, SERVER_CODE, BATCH_ID, STATUS_CODE, ERROR_MSG, SOA_PULLING_FLAG, SOA_PROCESS_CODE)
			SELECT PROCESS_CODE, SERVER_CODE, BATCH_ID, 'S' AS STATUS_CODE, ERROR_MSG, SOA_PULLING_FLAG, SOA_PROCESS_CODE FROM XXIF_CHP_CONTROL_ST 
			WHERE PROCESS_CODE = @processCode AND SERVER_CODE = @serverCode AND BATCH_ID = @batchId
		
		IF NOT EXISTS(SELECT TOP 1 * FROM @controlStage)
		BEGIN
			SET @message = @message + ' 無資料'
			RAISERROR(@message, 16, @success)
		END

		 --取出進櫃明細，檢查資料是否正確?
		SET @success = @success + 1
		INSERT INTO @detailTable (
			PROCESS_CODE, SERVER_CODE, BATCH_ID, BATCH_LINE_ID,
			CTR_HEADER_ID, CTR_DETAIL_ID,
			STATUS_CODE, ERROR_MSG)
		SELECT 
			c.PROCESS_CODE, c.SERVER_CODE, c.BATCH_ID, c.BATCH_LINE_ID, 
			d.CTR_HEADER_ID, d.CTR_DETAIL_ID,
			'S' AS STATUS_CODE,
			CASE WHEN o.CTR_ORG_ID IS NULL OR h.CTR_HEADER_ID IS NULL THEN N'櫃號資料不存在!!' 
				WHEN h.STATUS = 2 THEN N'櫃號已取消，無法取消!!' 
				WHEN h.STATUS = 0 THEN N'櫃號已入庫，無法取消!!' 
				ELSE '' END
			AS ERROR_MSG
		  FROM [XXIF_CHP_CONTROL_ST] ctl
		  JOIN @controlStage cs ON cs.PROCESS_CODE = ctl.PROCESS_CODE AND cs.SERVER_CODE = ctl.SERVER_CODE AND cs.BATCH_ID = ctl.BATCH_ID
		  JOIN [XXIF_CHP_P217_CONTAINER_ST] c ON c.PROCESS_CODE = ctl.PROCESS_CODE AND c.SERVER_CODE = ctl.SERVER_CODE AND c.BATCH_ID = ctl.BATCH_ID
		  LEFT JOIN CTR_ORG_T o ON c.HEADER_ID = o.HEADER_ID AND c.LINE_ID = o.LINE_ID AND c.DETAIL_ID = o.DETAIL_ID 
		  LEFT JOIN CTR_DETAIL_T d ON d.HEADER_ID = o.HEADER_ID AND d.LINE_ID = o.LINE_ID AND d.DETAIL_ID = o.DETAIL_ID 
		  LEFT JOIN CTR_HEADER_T h ON h.CTR_HEADER_ID = d.CTR_HEADER_ID
		  LEFT JOIN ITEMS_T t ON t.INVENTORY_ITEM_ID = c.INVENTORY_ITEM_ID 
		  LEFT JOIN ORGANIZATION_T r ON r.ORGANIZATION_ID = c.ORGANIZATION_ID
		  LEFT JOIN SUBINVENTORY_T s ON s.SUBINVENTORY_CODE = c.SUBINVENTORY 
		  LEFT JOIN LOCATOR_T l ON l.LOCATOR_ID = c.LOCATOR_ID AND l.SUBINVENTORY_CODE = c.SUBINVENTORY 
		  WHERE ctl.PROCESS_CODE = @processCode 
		  AND ctl.SERVER_CODE = @serverCode
		  AND ctl.BATCH_ID = @batchId
		  AND c.ATTRIBUTE1 = 'C' 

		IF NOT EXISTS(SELECT TOP 1 * FROM @detailTable)
		BEGIN
			SET @message = @message + ' 無資料'
			RAISERROR(@message, 16, @success)
		END

		--統計錯誤訊息
		SET @success = @success + 1
		UPDATE C SET 
			STATUS_CODE = CASE WHEN RTRIM(D.ERROR_MSG) = '' THEN 'S' ELSE 'E' END, 
			ERROR_MSG = CASE WHEN RTRIM(D.ERROR_MSG) = '' THEN NULL ELSE SUBSTRING(RTRIM(D.ERROR_MSG),0, 500) END
			FROM @controlStage C
			JOIN 
			(
				SELECT 
					A.PROCESS_CODE
					, A.SERVER_CODE
					, A.BATCH_ID
					, 'E' AS STATUS_CODE
					, ( SELECT  ERROR_MSG + '' FROM @detailTable  d 
						WHERE d.PROCESS_CODE = A.PROCESS_CODE AND d.SERVER_CODE = A.SERVER_CODE AND d.BATCH_ID = A.BATCH_ID
						GROUP BY d.PROCESS_CODE, d.SERVER_CODE, d.BATCH_ID, d.ERROR_MSG 
						FOR XML PATH('')) AS ERROR_MSG
				FROM @controlStage A
				JOIN @detailTable B ON B.PROCESS_CODE = A.PROCESS_CODE AND B.SERVER_CODE = A.SERVER_CODE AND B.BATCH_ID = A.BATCH_ID
				WHERE B.STATUS_CODE = 'E'
				GROUP BY A.PROCESS_CODE, A.SERVER_CODE, A.BATCH_ID
			) D ON C.PROCESS_CODE = D.PROCESS_CODE AND C.SERVER_CODE = D.SERVER_CODE AND C.BATCH_ID = D.BATCH_ID

		SET @success = 10
		--資料正常 寫入進櫃主檔、檔頭及明細
		IF NOT EXISTS (SELECT TOP 1 * FROM @controlStage WHERE STATUS_CODE = 'E')
		BEGIN 

			DELETE p FROM CTR_PICKED_T p 
				WHERE CTR_HEADER_ID IN ( SELECT DISTINCT CTR_HEADER_ID FROM @detailTable )

			IF(@@ROWCOUNT <= 0 AND @@ERROR <> 0)
			BEGIN
				SET @message = @message + ' 更新櫃號狀態錯誤'
				RAISERROR(@message, 16, @success)
			END

			DELETE p FROM CTR_DETAIL_T p 
				WHERE CTR_HEADER_ID IN ( SELECT DISTINCT CTR_HEADER_ID FROM @detailTable )

			IF(@@ROWCOUNT <= 0 AND @@ERROR <> 0)
			BEGIN
				SET @message = @message + ' 更新櫃號狀態錯誤'
				RAISERROR(@message, 16, @success)
			END

			UPDATE CTR_HEADER_T SET [STATUS]= CASE WHEN A.DCOUNT > 0 THEN 1 ELSE 2 END
			FROM (
				SELECT H.CTR_HEADER_ID, COUNT(D.CTR_DETAIL_ID) AS DCOUNT
				FROM CTR_HEADER_T H
				LEFT JOIN CTR_DETAIL_T D ON D.CTR_HEADER_ID = H.CTR_HEADER_ID
				WHERE H.CTR_HEADER_ID IN (SELECT DISTINCT CTR_HEADER_ID FROM @detailTable)
				GROUP BY H.CTR_HEADER_ID
			) A WHERE CTR_HEADER_T.CTR_HEADER_ID = A.CTR_HEADER_ID
			
			IF(@@ROWCOUNT <= 0 AND @@ERROR <> 0)
			BEGIN
				SET @message = @message + ' 更新櫃號狀態錯誤'
				RAISERROR(@message, 16, @success)
			END
		END
		
		--處理完成回寫 XXIF_CHP_P217_CONTAINER_ST 
		SET @success = @success + 1
		UPDATE A SET STATUS_CODE = B.STATUS_CODE, ERROR_MSG = B.ERROR_MSG
		FROM XXIF_CHP_P217_CONTAINER_ST A 
		JOIN @detailTable B ON B.PROCESS_CODE = A.PROCESS_CODE AND B.SERVER_CODE = A.SERVER_CODE AND B.BATCH_ID = A.BATCH_ID AND B.BATCH_LINE_ID = A.BATCH_LINE_ID

		IF(@@ROWCOUNT <= 0 AND @@ERROR <> 0)
		BEGIN
			SET @message = @message + ' 更新 XXIF_CHP_P217_CONTAINER_ST錯誤'
			RAISERROR(@message, 16, @success)
		END

		--處理完成寫 XXIF_CHP_CONTROL_ST
		SET @success = @success + 1
		UPDATE A SET STATUS_CODE = B.STATUS_CODE, ERROR_MSG = B.ERROR_MSG, SOA_PULLING_FLAG = 'OutAck-W'
			FROM XXIF_CHP_CONTROL_ST A
			JOIN @controlStage B ON B.PROCESS_CODE = A.PROCESS_CODE AND B.SERVER_CODE = A.SERVER_CODE AND B.BATCH_ID = A.BATCH_ID
		
		IF(@@ROWCOUNT <= 0 AND @@ERROR <> 0)
		BEGIN
			SET @message = @message + ' 更新 XXIF_CHP_CONTROL_ST錯誤'
			RAISERROR(@message, 16, @success)
		END
		
		SET @code = 0
		SET @message = ''
		
	END TRY
	BEGIN CATCH
		SET @code = -1 * @success
		SET @message = CAST(@success AS VARCHAR(2)) + ':' + ERROR_MESSAGE()

		UPDATE XXIF_CHP_CONTROL_ST SET STATUS_CODE = 'E', ERROR_MSG = @message, SOA_PULLING_FLAG = 'OutAck-W'
		WHERE PROCESS_CODE =@processCode AND SERVER_CODE = @serverCode AND BATCH_ID = @batchId
	END CATCH

END

