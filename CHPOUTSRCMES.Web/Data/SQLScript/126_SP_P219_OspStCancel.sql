-- =============================================
-- Author:		Polo Lin
-- Create date: 2020/09/1
-- Description:	SOA OSP_BATCH_ST 資料接收
-- =============================================
CREATE PROCEDURE [dbo].[SP_P219_OspStCancel]

	@processCode NVARCHAR(20),
	@serverCode NVARCHAR(20),
	@batchId NVARCHAR(20),
	@peBatchId BIGINT,
	@code INT OUTPUT,
	@message VARCHAR(500) OUTPUT,
	@user VARCHAR(128)
AS
BEGIN

	DECLARE @controlStage TABLE (
		PROCESS_CODE NVARCHAR(20),
		SERVER_CODE NVARCHAR(20),
		BATCH_ID NVARCHAR(20),
		STATUS_CODE NVARCHAR(1),
		ERROR_MSG NVARCHAR(2000),
		SOA_PULLING_FLAG NVARCHAR(30),
		SOA_PROCESS_CODE NVARCHAR(30)
	)

	DECLARE @orgTable TABLE (
		PROCESS_CODE NVARCHAR(20),
		SERVER_CODE NVARCHAR(20),
		BATCH_ID NVARCHAR(20),
		BATCH_LINE_ID BIGINT,
		PE_BATCH_ID BIGINT,
		OSP_REMARK NVARCHAR(240),
		STATUS_CODE NVARCHAR(1),
		ERROR_MSG NVARCHAR(2000)
	)

	DECLARE @table TABLE (
		OSP_ORG_ID BIGINT
	)

	DECLARE @success INT = 0
	
	SET @message = 'PROCESS_CODE:' + @processCode + ' SERVER_CODE:' + @serverCode + ' BATCH_ID:' + @batchId

	BEGIN TRY
		
		--取出出貨明細，檢查資料是否正確?
		SET @success = @success + 1
		INSERT INTO @orgTable (
			PROCESS_CODE, SERVER_CODE, BATCH_ID, BATCH_LINE_ID, PE_BATCH_ID, OSP_REMARK, 
			STATUS_CODE, ERROR_MSG)
		SELECT 
			c.PROCESS_CODE, c.SERVER_CODE, c.BATCH_ID, c.BATCH_LINE_ID, c.PE_BATCH_ID, c.OSP_REMARK,
			CASE WHEN o.OSP_ORG_ID IS NULL --未轉檔
				AND p.PE_BATCH_ID IS NOT NULL --已有工單單據
				AND c.BATCH_STATUS =-1 --取消動作
				AND p.[STATUS] IN ('0', '1') --待排單、已排單
				THEN 'S' 
				ELSE 'E' END AS STATUS_CODE,
			CASE WHEN o.OSP_ORG_ID IS NOT NULL THEN N'重複轉檔!!' ELSE '' END +
			CASE WHEN c.BATCH_STATUS <> -1 AND  p.PE_BATCH_ID IS NOT NULL THEN N'BATCH_STATUS 不等於-1，非取消狀態!!' ELSE '' END +
			CASE WHEN p.PE_BATCH_ID IS NULL THEN N'加工單資料不存在，無法異動或取消!! ' ELSE '' END + 
			CASE WHEN p.[STATUS] NOT IN ('0', '1') THEN N'僅待排單及已排單可進行取消!! ' ELSE '' END 
			AS ERROR_MSG
		  FROM [XXIF_CHP_CONTROL_ST] ctl
		  JOIN XXIF_CHP_P219_OSP_BATCH_ST c ON c.PROCESS_CODE = ctl.PROCESS_CODE AND c.SERVER_CODE = ctl.SERVER_CODE AND c.BATCH_ID = ctl.BATCH_ID
		  LEFT JOIN OSP_ORG_T o ON o.PROCESS_CODE = c.PROCESS_CODE AND o.SERVER_CODE = c.SERVER_CODE AND o.BATCH_ID = c.BATCH_ID AND o.BATCH_LINE_ID = c.BATCH_LINE_ID
		  LEFT JOIN ITEMS_T t ON t.INVENTORY_ITEM_ID = c.INVENTORY_ITEM_ID 
		  LEFT JOIN ORGANIZATION_T r ON r.ORGANIZATION_ID = c.ORGANIZATION_ID
		  LEFT JOIN SUBINVENTORY_T s ON s.SUBINVENTORY_CODE = c.SUBINVENTORY
		  LEFT JOIN LOCATOR_T l ON l.LOCATOR_ID = c.LOCATOR_ID AND l.SUBINVENTORY_CODE = c.SUBINVENTORY 
		  LEFT JOIN OSP_HEADER_T p ON p.PE_BATCH_ID = c.PE_BATCH_ID
		  WHERE ctl.PROCESS_CODE = @processCode 
		  AND ctl.SERVER_CODE = @serverCode
		  AND ctl.BATCH_ID = @batchId 
		  AND c.PE_BATCH_ID = @peBatchId

		IF NOT EXISTS(SELECT TOP 1 * FROM @orgTable)
		BEGIN
			SET @message = @message + ' 無資料'
			RAISERROR(@message, 16, @success)
		END

		SET @success = 10
		--資料正常 寫入進櫃主檔、檔頭及明細
		IF NOT EXISTS (SELECT TOP 1 * FROM @orgTable WHERE STATUS_CODE = 'E')
		BEGIN -- 檢查正常，寫入主檔
			DECLARE @ospHeaderId BIGINT = 0 
			SELECT TOP 1 @ospHeaderId = OSP_HEADER_ID FROM OSP_HEADER_T WHERE PE_BATCH_ID = @peBatchId AND STATUS IN ('0', '1')

			--檔頭
			SET @success = @success + 1
			UPDATE OSP_HEADER_T SET STATUS = '6' 
			WHERE OSP_HEADER_ID = @ospHeaderId

			IF (@@ROWCOUNT <= 0 AND @@ERROR <> 0)
			BEGIN
				SET @message = 'PROCESS_CODE:' + @processCode + ' SERVER_CODE:' + @serverCode + ' BATCH_ID:' + @batchId + ' 更新出貨檔頭失敗'
				RAISERROR(@message, 16, @success)
			END

			--組成料號明細
			SET @success = @success + 1
			INSERT INTO OSP_DETAIL_IN_HT (
				OSP_DETAIL_IN_ID
				, OSP_HEADER_ID, PROCESS_CODE, SERVER_CODE, BATCH_ID, BATCH_LINE_ID
				, LINE_TYPE, LINE_NO, INVENTORY_ITEM_ID, INVENTORY_ITEM_NUMBER, BASIC_WEIGHT
				, SPECIFICATION, GRAIN_DIRECTION, ORDER_WEIGHT, REAM_WT, PAPER_TYPE
				, PACKING_TYPE, PLAN_QTY, WIP_PLAN_QTY, DTL_UOM, ORDER_HEADER_ID
				, ORDER_NUMBER, ORDER_LINE_ID, ORDER_LINE_NUMBER, CUSTOMER_ID, CUSTOMER_NUMBER
				, CUSTOMER_NAME, PR_NUMBER, PR_LINE_NUMBER, REQUISITION_LINE_ID, PO_NUMBER
				, PO_LINE_NUMBER, PO_LINE_ID, PO_UNIT_PRICE, PO_REVISION_NUM, PO_STATUS
				, PO_VENDOR_NUM, OSP_REMARK, SUBINVENTORY, LOCATOR_ID, LOCATOR_CODE
				, RESERVATION_UOM_CODE, RESERVATION_QUANTITY, LINE_CREATED_BY, LINE_CREATION_DATE, LINE_LAST_UPDATE_BY
				, LINE_LAST_UPDATE_DATE, TRANSACTION_QUANTITY, TRANSACTION_UOM, PRIMARY_QUANTITY, PRIMARY_UOM
				, SECONDARY_QUANTITY, SECONDARY_UOM, ATTRIBUTE1, ATTRIBUTE2, ATTRIBUTE3
				, ATTRIBUTE4, ATTRIBUTE5, ATTRIBUTE6, ATTRIBUTE7, ATTRIBUTE8
				, ATTRIBUTE9, ATTRIBUTE10, ATTRIBUTE11, ATTRIBUTE12, ATTRIBUTE13
				, ATTRIBUTE14, ATTRIBUTE15, REQUEST_ID, CREATED_BY, CREATION_DATE
				, LAST_UPDATE_BY, LAST_UPDATE_DATE
			)
			SELECT
				OSP_DETAIL_IN_ID
				, OSP_HEADER_ID, PROCESS_CODE, SERVER_CODE, BATCH_ID, BATCH_LINE_ID
				, LINE_TYPE, LINE_NO, INVENTORY_ITEM_ID, INVENTORY_ITEM_NUMBER, BASIC_WEIGHT
				, SPECIFICATION, GRAIN_DIRECTION, ORDER_WEIGHT, REAM_WT, PAPER_TYPE
				, PACKING_TYPE, PLAN_QTY, WIP_PLAN_QTY, DTL_UOM, ORDER_HEADER_ID
				, ORDER_NUMBER, ORDER_LINE_ID, ORDER_LINE_NUMBER, CUSTOMER_ID, CUSTOMER_NUMBER
				, CUSTOMER_NAME, PR_NUMBER, PR_LINE_NUMBER, REQUISITION_LINE_ID, PO_NUMBER
				, PO_LINE_NUMBER, PO_LINE_ID, PO_UNIT_PRICE, PO_REVISION_NUM, PO_STATUS
				, PO_VENDOR_NUM, OSP_REMARK, SUBINVENTORY, LOCATOR_ID, LOCATOR_CODE
				, RESERVATION_UOM_CODE, RESERVATION_QUANTITY, LINE_CREATED_BY, LINE_CREATION_DATE, LINE_LAST_UPDATE_BY
				, LINE_LAST_UPDATE_DATE, TRANSACTION_QUANTITY, TRANSACTION_UOM, PRIMARY_QUANTITY, PRIMARY_UOM
				, SECONDARY_QUANTITY, SECONDARY_UOM, ATTRIBUTE1, ATTRIBUTE2, ATTRIBUTE3
				, ATTRIBUTE4, ATTRIBUTE5, ATTRIBUTE6, ATTRIBUTE7, ATTRIBUTE8
				, ATTRIBUTE9, ATTRIBUTE10, ATTRIBUTE11, ATTRIBUTE12, ATTRIBUTE13
				, ATTRIBUTE14, ATTRIBUTE15, REQUEST_ID, CREATED_BY, CREATION_DATE
				, LAST_UPDATE_BY, LAST_UPDATE_DATE
			FROM OSP_DETAIL_IN_T 
			WHERE OSP_HEADER_ID = @ospHeaderId

			IF (@@ROWCOUNT <= 0 AND @@ERROR <> 0)
			BEGIN
				SET @message = 'PROCESS_CODE:' + @processCode + ' SERVER_CODE:' + @serverCode + ' BATCH_ID:' + @batchId + ' 寫入加工組成成份明細失敗'
				RAISERROR(@message, 16, @success)
			END

			DELETE FROM OSP_DETAIL_IN_T WHERE OSP_HEADER_ID = @ospHeaderId

			IF (@@ROWCOUNT <= 0 AND @@ERROR <> 0)
			BEGIN
				SET @message = 'PROCESS_CODE:' + @processCode + ' SERVER_CODE:' + @serverCode + ' BATCH_ID:' + @batchId + ' 更新加工組成成份明細失敗'
				RAISERROR(@message, 16, @success)
			END

			--產品料號明細
			SET @success = @success + 1
			INSERT INTO OSP_DETAIL_OUT_HT (
				OSP_DETAIL_OUT_ID
				, OSP_HEADER_ID, PROCESS_CODE, SERVER_CODE, BATCH_ID, BATCH_LINE_ID
				, LINE_TYPE, LINE_NO, INVENTORY_ITEM_ID, INVENTORY_ITEM_NUMBER, BASIC_WEIGHT
				, SPECIFICATION, GRAIN_DIRECTION, ORDER_WEIGHT, REAM_WT, PAPER_TYPE
				, PACKING_TYPE, PLAN_QTY, WIP_PLAN_QTY, DTL_UOM, ORDER_HEADER_ID
				, ORDER_NUMBER, ORDER_LINE_ID, ORDER_LINE_NUMBER, CUSTOMER_ID, CUSTOMER_NUMBER
				, CUSTOMER_NAME, PR_NUMBER, PR_LINE_NUMBER, REQUISITION_LINE_ID, PO_NUMBER
				, PO_LINE_NUMBER, PO_LINE_ID, PO_UNIT_PRICE, PO_REVISION_NUM, PO_STATUS
				, PO_VENDOR_NUM, OSP_REMARK, SUBINVENTORY, LOCATOR_ID, LOCATOR_CODE
				, RESERVATION_UOM_CODE, RESERVATION_QUANTITY, LINE_CREATED_BY, LINE_CREATION_DATE, LINE_LAST_UPDATE_BY
				, LINE_LAST_UPDATE_DATE, TRANSACTION_QUANTITY, TRANSACTION_UOM, PRIMARY_QUANTITY, PRIMARY_UOM
				, SECONDARY_QUANTITY, SECONDARY_UOM, ATTRIBUTE1, ATTRIBUTE2, ATTRIBUTE3
				, ATTRIBUTE4, ATTRIBUTE5, ATTRIBUTE6, ATTRIBUTE7, ATTRIBUTE8
				, ATTRIBUTE9, ATTRIBUTE10, ATTRIBUTE11, ATTRIBUTE12, ATTRIBUTE13
				, ATTRIBUTE14, ATTRIBUTE15, REQUEST_ID, CREATED_BY, CREATION_DATE
				, LAST_UPDATE_BY, LAST_UPDATE_DATE
			)
			SELECT
				OSP_DETAIL_OUT_ID
				, OSP_HEADER_ID, PROCESS_CODE, SERVER_CODE, BATCH_ID, BATCH_LINE_ID
				, LINE_TYPE, LINE_NO, INVENTORY_ITEM_ID, INVENTORY_ITEM_NUMBER, BASIC_WEIGHT
				, SPECIFICATION, GRAIN_DIRECTION, ORDER_WEIGHT, REAM_WT, PAPER_TYPE
				, PACKING_TYPE, PLAN_QTY, WIP_PLAN_QTY, DTL_UOM, ORDER_HEADER_ID
				, ORDER_NUMBER, ORDER_LINE_ID, ORDER_LINE_NUMBER, CUSTOMER_ID, CUSTOMER_NUMBER
				, CUSTOMER_NAME, PR_NUMBER, PR_LINE_NUMBER, REQUISITION_LINE_ID, PO_NUMBER
				, PO_LINE_NUMBER, PO_LINE_ID, PO_UNIT_PRICE, PO_REVISION_NUM, PO_STATUS
				, PO_VENDOR_NUM, OSP_REMARK, SUBINVENTORY, LOCATOR_ID, LOCATOR_CODE
				, RESERVATION_UOM_CODE, RESERVATION_QUANTITY, LINE_CREATED_BY, LINE_CREATION_DATE, LINE_LAST_UPDATE_BY
				, LINE_LAST_UPDATE_DATE, TRANSACTION_QUANTITY, TRANSACTION_UOM, PRIMARY_QUANTITY, PRIMARY_UOM
				, SECONDARY_QUANTITY, SECONDARY_UOM, ATTRIBUTE1, ATTRIBUTE2, ATTRIBUTE3
				, ATTRIBUTE4, ATTRIBUTE5, ATTRIBUTE6, ATTRIBUTE7, ATTRIBUTE8
				, ATTRIBUTE9, ATTRIBUTE10, ATTRIBUTE11, ATTRIBUTE12, ATTRIBUTE13
				, ATTRIBUTE14, ATTRIBUTE15, REQUEST_ID, CREATED_BY, CREATION_DATE
				, LAST_UPDATE_BY, LAST_UPDATE_DATE
			FROM OSP_DETAIL_OUT_T
			WHERE OSP_HEADER_ID = @ospHeaderId

			IF (@@ROWCOUNT <= 0 AND @@ERROR <> 0)
			BEGIN
				SET @message = 'PROCESS_CODE:' + @processCode + ' SERVER_CODE:' + @serverCode + ' BATCH_ID:' + @batchId + ' 更新加工產品明細失敗'
				RAISERROR(@message, 16, @success)
			END

			DELETE FROM OSP_DETAIL_OUT_T WHERE OSP_HEADER_ID = @ospHeaderId

			IF (@@ROWCOUNT <= 0 AND @@ERROR <> 0)
			BEGIN
				SET @message = 'PROCESS_CODE:' + @processCode + ' SERVER_CODE:' + @serverCode + ' BATCH_ID:' + @batchId + ' 更新加工產品明細失敗'
				RAISERROR(@message, 16, @success)
			END
		END
		
		--處理完成回寫 XXIF_CHP_P219_OSP_BATCH_ST 
		SET @success = @success + 1
		UPDATE A SET STATUS_CODE = B.STATUS_CODE, ERROR_MSG = B.ERROR_MSG
		FROM XXIF_CHP_P219_OSP_BATCH_ST A 
		JOIN @orgTable B ON B.PROCESS_CODE = A.PROCESS_CODE AND B.SERVER_CODE = A.SERVER_CODE AND B.BATCH_ID = A.BATCH_ID AND B.BATCH_LINE_ID = A.BATCH_LINE_ID

		IF(@@ROWCOUNT <= 0 AND @@ERROR <> 0)
		BEGIN
			SET @message = @message + ' 更新 XXIF_CHP_P219_OSP_BATCH_ST 錯誤'
			RAISERROR(@message, 16, @success)
		END

		SET @code = 0
		SET @message = ''
		
	END TRY
	BEGIN CATCH
		SET @code = -1 * @success
		SET @message = CAST(@success AS VARCHAR(2)) + ':' + ERROR_MESSAGE()

	END CATCH

END

