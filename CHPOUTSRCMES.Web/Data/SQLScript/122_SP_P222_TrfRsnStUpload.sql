-- =============================================
-- Author:		Polo Lin
-- Create date: 2020/09/22
-- Description:	SOA SUB_TRANSFER_ST 資料上傳
-- =============================================
CREATE PROCEDURE [dbo].[SP_P222_TrfRsnStUpload]
	@trfRsnHeaderId BIGINT,
	@processCode VARCHAR(20) OUTPUT,
	@serverCode VARCHAR(20) OUTPUT,
	@batchId VARCHAR(20) OUTPUT,
	@code INT OUTPUT,
	@message VARCHAR(500) OUTPUT,
	@user VARCHAR(128)
AS
BEGIN

	DECLARE @table TABLE (
		PROCESS_CODE VARCHAR(20)
		, SERVER_CODE VARCHAR(20)
		, BATCH_ID VARCHAR(20)
		, BATCH_LINE_ID BIGINT
		, TRANSFER_REASON_HEADER_ID BIGINT
		, TRANSACTION_DATE DATETIME
	)

	DECLARE @success INT = 0
	DECLARE @count INT = 0
	SELECT @message = 'TRANSFER_REASON_HEADER_ID:' + CONVERT(varchar, @trfRsnHeaderId)

	DECLARE @txnDate DATETIME = GETDATE()
	SET @processCode = 'XXIFP222'
	SET @serverCode = 'FTY'
	SET @batchId = FORMAT(@txnDate, 'yyyyMMddHHmmssffffff')

	BEGIN TRY
		
		--庫存移轉 -貨故 出庫 / 入庫
		SET @success = @success + 1
		INSERT INTO dbo.XXIF_CHP_P222_SUB_TRANSFER_ST (
			PROCESS_CODE, SERVER_CODE, BATCH_ID, BATCH_LINE_ID, STATUS_CODE
			, ERROR_MSG, ORG_ID, ORG_NAME, ORGANIZATION_ID, ORGANIZATION_CODE
			, SHIPMENT_NUMBER, SUBINVENTORY_CODE, LOCATOR_ID, LOCATOR_CODE, TRANSACTION_DATE
			, TRANSACTION_TYPE_ID, TRANSACTION_TYPE_NAME, TRANSFER_ORG_ID, TRANSFER_ORG_NAME, TRANSFER_ORGANIZATION_ID
			, TRANSFER_ORGANIZATION_CODE, TRANSFER_SUBINVENTORY_CODE, TRANSFER_LOCATOR_ID, TRANSFER_LOCATOR_CODE, INVENTORY_ITEM_ID
			, ITEM_NUMBER, ITEM_DESCRIPTION, TRANSACTION_UOM, TRANSACTION_QUANTITY, PRIMARY_UOM
			, PRIMARY_QUANTITY, SECONDARY_UOM_CODE, SECONDARY_QUANTITY, ROLL_NUMBER, ROLL_QUANTITY
			, ATTRIBUTE1, ATTRIBUTE2, ATTRIBUTE3, ATTRIBUTE4, ATTRIBUTE5
			, ATTRIBUTE6, ATTRIBUTE7, ATTRIBUTE8, ATTRIBUTE9, ATTRIBUTE10
			, ATTRIBUTE11, ATTRIBUTE12, ATTRIBUTE13, ATTRIBUTE14, ATTRIBUTE15
			, REQUEST_ID, CREATED_BY, CREATION_DATE, LAST_UPDATED_BY, LAST_UPDATE_DATE )
		OUTPUT inserted.PROCESS_CODE, inserted.SERVER_CODE, inserted.BATCH_ID, inserted.BATCH_LINE_ID, @trfRsnHeaderId, inserted.TRANSACTION_DATE
		INTO @table (PROCESS_CODE, SERVER_CODE, BATCH_ID, BATCH_LINE_ID, TRANSFER_REASON_HEADER_ID, TRANSACTION_DATE)
		SELECT 
			PROCESS_CODE, SERVER_CODE, BATCH_ID, ROW_NUMBER() OVER (ORDER BY ATTRIBUTE1 DESC) AS BATCH_LINE_ID, STATUS_CODE
				, ERROR_MSG, ORG_ID, ORG_NAME, ORGANIZATION_ID, ORGANIZATION_CODE
				, SHIPMENT_NUMBER, SUBINVENTORY_CODE, LOCATOR_ID, LOCATOR_CODE, TRANSACTION_DATE
				, TRANSACTION_TYPE_ID, TRANSACTION_TYPE_NAME, TRANSFER_ORG_ID, TRANSFER_ORG_NAME, TRANSFER_ORGANIZATION_ID
				, TRANSFER_ORGANIZATION_CODE, TRANSFER_SUBINVENTORY_CODE, TRANSFER_LOCATOR_ID, TRANSFER_LOCATOR_CODE, INVENTORY_ITEM_ID
				, ITEM_NUMBER, ITEM_DESCRIPTION, TRANSACTION_UOM, TRANSACTION_QUANTITY, PRIMARY_UOM
				, PRIMARY_QUANTITY, SECONDARY_UOM_CODE, SECONDARY_QUANTITY, ROLL_NUMBER, ROLL_QUANTITY
				, ATTRIBUTE1, ATTRIBUTE2, ATTRIBUTE3, ATTRIBUTE4, ATTRIBUTE5
				, ATTRIBUTE6, ATTRIBUTE7, ATTRIBUTE8, ATTRIBUTE9, ATTRIBUTE10
				, ATTRIBUTE11, ATTRIBUTE12, ATTRIBUTE13, ATTRIBUTE14, ATTRIBUTE15
				, REQUEST_ID, CREATED_BY, CREATION_DATE, LAST_UPDATED_BY, LAST_UPDATE_DATE 
		FROM (
			SELECT  
				@processCode AS PROCESS_CODE, @serverCode AS SERVER_CODE, @batchId AS BATCH_ID, NULL AS STATUS_CODE
				, NULL AS ERROR_MSG, MIN(H.ORG_ID) AS ORG_ID, MIN(O.ORG_NAME) AS ORG_NAME, MIN(H.ORGANIZATION_ID) AS ORGANIZATION_ID, MIN(H.ORGANIZATION_CODE) AS ORGANIZATION_CODE
				, NULL AS SHIPMENT_NUMBER, MIN(H.SUBINVENTORY_CODE) AS SUBINVENTORY_CODE, MIN(H.LOCATOR_ID) AS LOCATOR_ID, MIN(H.LOCATOR_CODE) AS LOCATOR_CODE, MIN(H.TRANSACTION_DATE) AS TRANSACTION_DATE
				, MIN(H.TRANSACTION_TYPE_ID) AS TRANSACTION_TYPE_ID, MIN(H.TRANSACTION_TYPE_NAME) AS TRANSACTION_TYPE_NAME, MIN(H.TRANSFER_ORG_ID) AS TRANSFER_ORG_ID, MIN(T.ORG_NAME) AS TRANSFER_ORG_NAME, MIN(H.TRANSFER_ORGANIZATION_ID) AS TRANSFER_ORGANIZATION_ID
				, MIN(H.TRANSFER_ORGANIZATION_CODE) AS TRANSFER_ORGANIZATION_CODE, MIN(H.TRANSFER_SUBINVENTORY_CODE) AS TRANSFER_SUBINVENTORY_CODE, MIN(H.TRANSFER_LOCATOR_ID) AS TRANSFER_LOCATOR_ID, MIN(H.TRANSFER_LOCATOR_CODE) AS TRANSFER_LOCATOR_CODE, D.INVENTORY_ITEM_ID AS INVENTORY_ITEM_ID
				, MIN(D.ITEM_NUMBER) AS ITEM_NUMBER, MIN(D.ITEM_DESCRIPTION) AS ITEM_DESCRIPTION
				, CASE MIN(I.CATALOG_ELEM_VAL_070) WHEN '平版' THEN MIN(D.SECONDARY_UOM) ELSE MIN(D.PRIMARY_UOM) END AS TRANSACTION_UOM
				, CASE MIN(I.CATALOG_ELEM_VAL_070) WHEN '平版' THEN SUM(D.SECONDARY_QUANTITY) ELSE MIN(D.PRIMARY_QUANTITY) END AS TRANSACTION_QUANTITY
				, MIN(D.PRIMARY_UOM) AS PRIMARY_UOM
				, MIN(D.PRIMARY_QUANTITY) AS PRIMARY_QUANTITY
				, CASE MIN(I.CATALOG_ELEM_VAL_070) WHEN '平版' THEN MIN(D.SECONDARY_UOM) ELSE NULL END AS SECONDARY_UOM_CODE
				, CASE MIN(I.CATALOG_ELEM_VAL_070) WHEN '平版' THEN SUM(D.SECONDARY_QUANTITY) ELSE NULL END AS SECONDARY_QUANTITY
				, dbo.ROLL_NUMBER(MIN(I.CATALOG_ELEM_VAL_070), MIN(D.LOT_NUMBER)) AS ROLL_NUMBER
				, dbo.ROLL_QUANTITY(MIN(I.CATALOG_ELEM_VAL_070), MIN(D.PRIMARY_QUANTITY)) AS ROLL_QUANTITY
				, 'O' AS ATTRIBUTE1, NULL AS ATTRIBUTE2, NULL AS ATTRIBUTE3, NULL AS ATTRIBUTE4, NULL AS ATTRIBUTE5
				, NULL AS ATTRIBUTE6, NULL AS ATTRIBUTE7, NULL AS ATTRIBUTE8, NULL AS ATTRIBUTE9, NULL AS ATTRIBUTE10
				, NULL AS ATTRIBUTE11, NULL AS ATTRIBUTE12, NULL AS ATTRIBUTE13, NULL AS ATTRIBUTE14, NULL AS ATTRIBUTE15
				, NULL AS REQUEST_ID, -1 AS CREATED_BY, MAX(D.CREATION_DATE) AS CREATION_DATE, -1 AS LAST_UPDATED_BY, ISNULL(MAX(D.LAST_UPDATE_DATE), MAX(D.CREATION_DATE)) AS LAST_UPDATE_DATE
			FROM [TRF_REASON_HEADER_T] H
			JOIN [TRF_REASON_HT] D ON D.TRANSFER_REASON_HEADER_ID = H.TRANSFER_REASON_HEADER_ID
			JOIN [ORG_UNIT_T] O ON O.ORG_ID = H.ORG_ID
			JOIN [ORG_UNIT_T] T ON T.ORG_ID = H.TRANSFER_ORG_ID
			JOIN [ITEMS_T] I ON I.INVENTORY_ITEM_ID = D.INVENTORY_ITEM_ID
			WHERE H.TRANSFER_REASON_HEADER_ID = @trfRsnHeaderId
			GROUP BY H.TRANSFER_REASON_HEADER_ID, D.INVENTORY_ITEM_ID, D.LOT_NUMBER
			UNION
			SELECT  
				@processCode AS PROCESS_CODE, @serverCode AS SERVER_CODE, @batchId AS BATCH_ID, NULL AS STATUS_CODE
				, NULL AS ERROR_MSG, MIN(H.ORG_ID) AS ORG_ID, MIN(O.ORG_NAME) AS ORG_NAME, MIN(H.ORGANIZATION_ID) AS ORGANIZATION_ID, MIN(H.ORGANIZATION_CODE) AS ORGANIZATION_CODE
				, NULL AS SHIPMENT_NUMBER, MIN(H.SUBINVENTORY_CODE) AS SUBINVENTORY_CODE, MIN(H.LOCATOR_ID) AS LOCATOR_ID, MIN(H.LOCATOR_CODE) AS LOCATOR_CODE, MIN(H.TRANSACTION_DATE) AS TRANSACTION_DATE
				, MIN(H.TRANSACTION_TYPE_ID) AS TRANSACTION_TYPE_ID, MIN(H.TRANSACTION_TYPE_NAME) AS TRANSACTION_TYPE_NAME, MIN(H.TRANSFER_ORG_ID) AS TRANSFER_ORG_ID, MIN(T.ORG_NAME) AS TRANSFER_ORG_NAME, MIN(H.TRANSFER_ORGANIZATION_ID) AS TRANSFER_ORGANIZATION_ID
				, MIN(H.TRANSFER_ORGANIZATION_CODE) AS TRANSFER_ORGANIZATION_CODE, MIN(H.TRANSFER_SUBINVENTORY_CODE) AS TRANSFER_SUBINVENTORY_CODE, MIN(H.TRANSFER_LOCATOR_ID) AS TRANSFER_LOCATOR_ID, MIN(H.TRANSFER_LOCATOR_CODE) AS TRANSFER_LOCATOR_CODE, D.INVENTORY_ITEM_ID AS INVENTORY_ITEM_ID
				, MIN(D.ITEM_NUMBER) AS ITEM_NUMBER, MIN(D.ITEM_DESCRIPTION) AS ITEM_DESCRIPTION
				, CASE MIN(I.CATALOG_ELEM_VAL_070) WHEN '平版' THEN MIN(D.SECONDARY_UOM) ELSE MIN(D.PRIMARY_UOM) END AS TRANSACTION_UOM
				, CASE MIN(I.CATALOG_ELEM_VAL_070) WHEN '平版' THEN SUM(D.SECONDARY_QUANTITY) ELSE MIN(D.PRIMARY_QUANTITY) END AS TRANSACTION_QUANTITY
				, MIN(D.PRIMARY_UOM) AS PRIMARY_UOM
				, MIN(D.PRIMARY_QUANTITY) AS PRIMARY_QUANTITY
				, CASE MIN(I.CATALOG_ELEM_VAL_070) WHEN '平版' THEN MIN(D.SECONDARY_UOM) ELSE NULL END AS SECONDARY_UOM_CODE
				, CASE MIN(I.CATALOG_ELEM_VAL_070) WHEN '平版' THEN SUM(D.SECONDARY_QUANTITY) ELSE NULL END AS SECONDARY_QUANTITY
				, dbo.ROLL_NUMBER(MIN(I.CATALOG_ELEM_VAL_070), MIN(D.LOT_NUMBER)) AS ROLL_NUMBER
				, dbo.ROLL_QUANTITY(MIN(I.CATALOG_ELEM_VAL_070), MIN(D.PRIMARY_QUANTITY)) AS ROLL_QUANTITY
				, 'I' AS ATTRIBUTE1, NULL AS ATTRIBUTE2, NULL AS ATTRIBUTE3, NULL AS ATTRIBUTE4, NULL AS ATTRIBUTE5
				, NULL AS ATTRIBUTE6, NULL AS ATTRIBUTE7, NULL AS ATTRIBUTE8, NULL AS ATTRIBUTE9, NULL AS ATTRIBUTE10
				, NULL AS ATTRIBUTE11, NULL AS ATTRIBUTE12, NULL AS ATTRIBUTE13, NULL AS ATTRIBUTE14, NULL AS ATTRIBUTE15
				, NULL AS REQUEST_ID, -1 AS CREATED_BY, MAX(D.CREATION_DATE) AS CREATION_DATE, -1 AS LAST_UPDATED_BY, ISNULL(MAX(D.LAST_UPDATE_DATE), MAX(D.CREATION_DATE)) AS LAST_UPDATED_DATE
			FROM [TRF_REASON_HEADER_T] H
			JOIN [TRF_REASON_HT] D ON D.TRANSFER_REASON_HEADER_ID = H.TRANSFER_REASON_HEADER_ID
			JOIN [ORG_UNIT_T] O ON O.ORG_ID = H.ORG_ID
			JOIN [ORG_UNIT_T] T ON T.ORG_ID = H.TRANSFER_ORG_ID
			JOIN [ITEMS_T] I ON I.INVENTORY_ITEM_ID = D.INVENTORY_ITEM_ID
			WHERE H.TRANSFER_REASON_HEADER_ID = @trfRsnHeaderId
			GROUP BY H.TRANSFER_REASON_HEADER_ID, D.INVENTORY_ITEM_ID, D.LOT_NUMBER
		) A ORDER BY BATCH_LINE_ID
		
		IF (@@ROWCOUNT <= 0 AND @@ERROR <> 0)
		BEGIN
			SET @message = 'PROCESS_CODE:' + @processCode + ' SERVER_CODE:' + @serverCode + ' BATCH_ID:' 
			+ @batchId + ' TRANSFER_REASON_HEADER_ID:' + CONVERT(varchar, @trfRsnHeaderId) + ' 上傳貨故原因 失敗'
			RAISERROR(@message, 16, @success)
		END
		
		SET @code = 0
		SET @message = ''
		
	END TRY
	BEGIN CATCH
		SET @code = -1 * @success
		SET @message = CAST(@success AS VARCHAR(2)) + ':' + ERROR_MESSAGE()
	END CATCH

END

